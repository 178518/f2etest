{"id":1486655,"slug":"webdriver-cloud","title":"WebDriver 云实现原理","book_id":245753,"book":{"id":245753,"type":"Book","slug":"f2etest","name":"F2etest","user_id":296279,"description":"F2etest 是一个面向前端、测试、产品等岗位的多浏览器兼容性测试整体解决方案。","creator_id":94302,"public":1,"items_count":12,"likes_count":0,"watches_count":2,"content_updated_at":"2019-04-23T05:44:30.303Z","updated_at":"2019-04-23T06:32:14.000Z","created_at":"2019-03-21T03:15:48.000Z","namespace":"linshuoting/f2etest","user":{"id":94302,"type":"User","login":"linshuoting","name":"说听(Stngle)","description":"F&D艺术家   \nhttps://github.com/Stngle","avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/94302/1553150368242-avatar/4fa5a6cc-1636-43cd-b085-fce8ad30be09.png","large_avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/94302/1553150368242-avatar/4fa5a6cc-1636-43cd-b085-fce8ad30be09.png?x-oss-process=image/resize,m_fill,w_320,h_320","medium_avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/94302/1553150368242-avatar/4fa5a6cc-1636-43cd-b085-fce8ad30be09.png?x-oss-process=image/resize,m_fill,w_160,h_160","small_avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/94302/1553150368242-avatar/4fa5a6cc-1636-43cd-b085-fce8ad30be09.png?x-oss-process=image/resize,m_fill,w_80,h_80","books_count":1,"public_books_count":0,"followers_count":3,"following_count":2,"created_at":"2018-03-21T12:59:06.000Z","updated_at":"2019-04-23T05:43:09.000Z","_serializer":"v2.user"},"_serializer":"v2.book"},"user_id":182712,"creator":{"id":182712,"type":"User","login":"undead25","name":"双龙","description":null,"avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/182712/1554346835965-avatar/a9f57da4-3a12-43bc-be2c-85b7e215b7c7.png","large_avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/182712/1554346835965-avatar/a9f57da4-3a12-43bc-be2c-85b7e215b7c7.png?x-oss-process=image/resize,m_fill,w_320,h_320","medium_avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/182712/1554346835965-avatar/a9f57da4-3a12-43bc-be2c-85b7e215b7c7.png?x-oss-process=image/resize,m_fill,w_160,h_160","small_avatar_url":"https://cdn.nlark.com/yuque/0/2019/png/182712/1554346835965-avatar/a9f57da4-3a12-43bc-be2c-85b7e215b7c7.png?x-oss-process=image/resize,m_fill,w_80,h_80","books_count":0,"public_books_count":0,"followers_count":0,"following_count":1,"created_at":"2018-09-26T16:45:26.000Z","updated_at":"2019-04-04T03:00:41.000Z","_serializer":"v2.user"},"format":"lake","body":"","body_draft":"","body_html":"<h1 id=\"96bab6ea\">一、WebDriver 云架构</h1><p><br /></p><p><span>WebDriver 云则是基于 Webdriver 实现的一套 WebDriver Hub 解决方案，提供并调度执行自动化测试的工作节点。下面我们来看下它的基本架构</span></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/182712/1554716858950-dc86ef14-8b0f-497a-a21d-5e0bb7771e2d.png#align=left&amp;display=inline&amp;height=721&amp;name=image.png&amp;originHeight=721&amp;originWidth=1462&amp;size=140068&amp;status=done&amp;width=1462\" style=\"max-width: 600px; width: 1462px;\" /></p><p><br /></p><p><strong>F2etest-web </strong>是 webdriver 云的用户界面层，</p><ul><li>对于 f2etest-webdriver 模块提供了 API 做<strong>健康检查</strong>的上报，并将节点定时上报的状态（空闲、工作、离线）存储在 DB 中。</li><li>对于服务调用方，则根据节点上报的状态，找到空闲的节点，分配到不同的节点地址。</li></ul><p><br /></p><p>来细看 f2etest-webdriver 的实现</p><ul><li><strong>WebDriver Proxy </strong>是 node.js 实现的一个 WebDriver 会话管理程序，负责启动 <strong><span>Selenium，</span></strong>上报节点状态和<span>代理</span>设置，监听<span>端口是 4000{1-8}，1-8 为节点的序号，如 node01，</span><span>则监听 40001 端口</span>。</li><li><strong><span>Selenium </span></strong><span>监听的端口是 5000{1-8}，1-8 为节点的序号，如 node01，</span><span>则监听 50001 端口。</span></li><li><strong><span>ChromeDriver, IEDriver, FirefoxDriver </span></strong><span>由浏览器厂商提供，</span>是网站测试架构 selenium 的基础部分，主要是通过 http 通信实现的，它们是 selenium 和浏览器进行通信的桥梁。</li><li><strong>Daemon </strong>守护进程（openAllNode.bat），监听远程桌面节点是否都存活，若节点进程挂掉，则会重新启动node.rdp，进而重启节点。</li></ul><p><br /></p><h1 id=\"1dc0ea59\">二、f2etest-webdriver 调用流程</h1><p><br /></p><p>上报的 WebDriver 节点存活状态：</p><p><br /></p><p><img alt=\"image.png\" title=\"image.png\" src=\"https://cdn.nlark.com/yuque/0/2019/png/182712/1554716858959-a6a33339-e0f0-4bb4-915a-ff3d0fb4de41.png#align=left&amp;display=inline&amp;height=512&amp;name=image.png&amp;originHeight=1024&amp;originWidth=2460&amp;size=906045&amp;status=done&amp;width=1230\" style=\"max-width: 600px; width: 1230px;\" /></p><p><br /></p><h1 id=\"122777f4\">三、小结</h1><p><br /></p><p>WebDriver 云原理并不复杂，难点在于机器部署的成本高，这一点也造成了推广使用的成本高，有两种解决方案，一是提供打包好的镜像文件，供直接下载。二是提供 Windows Docker 镜像，将在博客专栏节中进行探讨。</p>","body_lake":"<!doctype lake><h1 id=\"96bab6ea\">一、WebDriver <cursor />云架构</h1><p><br /></p><p><span>WebDriver 云则是基于 Webdriver 实现的一套 WebDriver Hub 解决方案，提供并调度执行自动化测试的工作节点。下面我们来看下它的基本架构</span></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F182712%2F1554716858950-dc86ef14-8b0f-497a-a21d-5e0bb7771e2d.png%22%2C%22originWidth%22%3A1462%2C%22originHeight%22%3A721%2C%22name%22%3A%22image.png%22%2C%22size%22%3A140068%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A1462%2C%22height%22%3A721%7D\"></card></p><p><br /></p><p><strong>F2etest-web </strong>是 webdriver 云的用户界面层，</p><ul><li>对于 f2etest-webdriver 模块提供了 API 做<strong>健康检查</strong>的上报，并将节点定时上报的状态（空闲、工作、离线）存储在 DB 中。</li><li>对于服务调用方，则根据节点上报的状态，找到空闲的节点，分配到不同的节点地址。</li></ul><p><br /></p><p>来细看 f2etest-webdriver 的实现</p><ul><li><strong>WebDriver Proxy </strong>是 node.js 实现的一个 WebDriver 会话管理程序，负责启动 <strong><span>Selenium，</span></strong>上报节点状态和<span>代理</span>设置，监听<span>端口是 4000{1-8}，1-8 为节点的序号，如 node01，</span><span>则监听 40001 端口</span>。</li><li><strong><span>Selenium </span></strong><span>监听的端口是 5000{1-8}，1-8 为节点的序号，如 node01，</span><span>则监听 50001 端口。</span></li><li><strong><span>ChromeDriver, IEDriver, FirefoxDriver </span></strong><span>由浏览器厂商提供，</span>是网站测试架构 selenium 的基础部分，主要是通过 http 通信实现的，它们是 selenium 和浏览器进行通信的桥梁。</li><li><strong>Daemon </strong>守护进程（openAllNode.bat），监听远程桌面节点是否都存活，若节点进程挂掉，则会重新启动node.rdp，进而重启节点。</li></ul><p><br /></p><h1 id=\"1dc0ea59\">二、f2etest-webdriver 调用流程</h1><p><br /></p><p>上报的 WebDriver 节点存活状态：</p><p><br /></p><p><card type=\"inline\" name=\"image\" value=\"data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2019%2Fpng%2F182712%2F1554716858959-a6a33339-e0f0-4bb4-915a-ff3d0fb4de41.png%22%2C%22originWidth%22%3A2460%2C%22originHeight%22%3A1024%2C%22name%22%3A%22image.png%22%2C%22size%22%3A906045%2C%22display%22%3A%22inline%22%2C%22align%22%3A%22left%22%2C%22linkTarget%22%3A%22_blank%22%2C%22status%22%3A%22done%22%2C%22width%22%3A1230%2C%22height%22%3A512%7D\"></card></p><p><br /></p><h1 id=\"122777f4\">三、小结</h1><p><br /></p><p>WebDriver 云原理并不复杂，难点在于机器部署的成本高，这一点也造成了推广使用的成本高，有两种解决方案，一是提供打包好的镜像文件，供直接下载。二是提供 Windows Docker 镜像，将在博客专栏节中进行探讨。</p>","public":1,"status":null,"likes_count":4,"comments_count":0,"content_updated_at":"2019-04-16T16:41:02.000Z","deleted_at":null,"created_at":"2019-04-08T09:47:26.000Z","updated_at":"2019-04-23T06:15:05.000Z","published_at":"2019-04-16T16:41:02.000Z","first_published_at":"2019-04-08T09:53:17.000Z","word_count":419,"cover":null,"description":"一、WebDriver 云架构WebDriver 云则是基于 Webdriver 实现的一套 WebDriver Hub 解决方案，提供并调度执行自动化测试的工作节点。下面我们来看下它的基本架构F2etest-web 是 webdriver 云的用户界面层，对于 f2etest-webdriv...","custom_description":null,"_serializer":"v2.doc_detail"}